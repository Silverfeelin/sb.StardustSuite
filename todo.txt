// try hacking an itemdrop and dumping _ENV

move the business end of playerext:openInterface into a library function so panes can use it directly (while keeping things clean and easily-updatable)

configurable tram stop {
  built-in player sensor
}

reserve material ID range somewhere
semigloss black hull panel

figure out how the feck to detect if shift is held
implement slot-drop
reimplement preview slot
CLEAN UP REMNANTS OF OLD TERMINAL IMPLEMENTATION
somewhat redesign UI to make better use of now-unneeded tooltip area

TERMINAL THEMABILITY?

BYOS functionality as machine {
    damageTileArea with ridiculously high strength and harvest level and radius big enough to cover a t8 vanilla ship from one end, in both fg and bg
    itemDropQuery and collect into database
    upgrade player ship to custom tier to get rid of bg image and collision material
    force-kill objects set "residual" by Hacking them and using object.smash
}
patch warp state matching into encounter variations of booster flames (/objects/ship/boosters/)
add distinguishing names to even/odd small booster flames
lots of shiny new ship components, especially animating ones that match their state to flight {
    also floor-only teleporters
}

power stuffs {
    pure conduits to route power further and more neatly
    
    machine that powers warp core via fluxpulse (world property "ship.fuel")
    wireless charger
    
    technician table for reconfiguring modulars
    augpack as EPP + power source, lower-tier precursor to powersuit
    powersuit {
        hijack tech? how much?
    }

    fluxsaber (fluxpulse-charged beamsword)
    
    intermediary pulse-battery component?
    
    power category?
    
    eventually make transmatter network require power
}

compost bin that makes food age faster, for use as biofuel
^ some sort of powered processor to make (liquid) biodiesel?

renamer (custom shortdescription, put vanilla one as category because tooltip)

actual configurator object instead of having it in the quickbar for non-admins

recipes {
    (all clear!)
}

some major cleanup in places

probably a UI lib that encapsulates widgets (read from heirarchy)

Extend sync library {
    //Recognize RpcPromise returning another RpcPromise and replace in queue
    
    actually, response system with a proper response-message instead of just an RpcPromise
    generate responseID with makeuuid? register with an anonymous function for continuation of operation after response
}

Transmatter network reimplementation {
    Controller {
        API {
            callable via both callScriptedEntity and sendEntityMessage
            each request runs as a coroutine placed on a queue for suspendability and environment cleanliness
            
            ...
        }
        Network Scan Module {
            periodically scans the network pool, assembles the list of storage devices and notifies peripherals
        }
    }
}
